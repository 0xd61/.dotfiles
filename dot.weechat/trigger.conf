#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
cmd_pass_register.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass_register.command = ""
cmd_pass_register.conditions = ""
cmd_pass_register.enabled = on
cmd_pass_register.hook = modifier
cmd_pass_register.post_action = none
cmd_pass_register.regex = "==^(/(msg|m|quote) +nickserv +register +)([^ ]+)(.*)==${re:1}${hide:*,${re:3}}${re:4}"
cmd_pass_register.return_code = ok
highmon_like.arguments = "*;irc_privmsg,matrix_message"
highmon_like.command = "/buffer set localvar_set_highmon_context_datetime ${my_context_datetime};/buffer set localvar_set_highmon_context_number ${my_context_number};/print -newbuffer highmon -tags ${tg_tags} ${cutscr:4,${color:${weechat.color.chat_prefix_more}}${weechat.look.prefix_buffer_align_more},${color:${info:nick_color_name,${server}}}${server}}${color:${info:nick_color_name,${channel}}}${channel}\t${if:${tg_tags} !~ ,irc_action,?${weechat.look.quote_nick_prefix}${tg_prefix}${color:reset}${weechat.look.quote_nick_suffix}:${tg_prefix}${color:reset}} ${tg_message}"
highmon_like.conditions = "${tg_highlight} == 1 && ${tg_displayed} == 1 && ${buffer.local_variables.type} == channel || ${plugins.var.highmon_context} != && ${buffer.local_variables.highmon_context_number} =~ ^[0-9]+$ && ${buffer.local_variables.highmon_context_number} >= 1 && ${buffer.local_variables.highmon_context_number} <= ${if:${plugins.var.highmon_context_max_msg}!=?${plugins.var.highmon_context_max_msg}:3} && ${buffer.local_variables.highmon_context_datetime} != && ${info:python_version} != && ${info:date_calc_seconds_two_given_datetime,${tg_date},${buffer.local_variables.highmon_context_datetime}} <= ${if:${plugins.var.highmon_context_max_seconds}!=?${plugins.var.highmon_context_max_seconds}:60}"
highmon_like.enabled = on
highmon_like.hook = print
highmon_like.post_action = none
highmon_like.regex = "/.*/${if:${tg_highlight}!=?1:${calc:${buffer.local_variables.highmon_context_number}+1}}/my_context_number /.*/${if:${tg_highlight}!=?${tg_date}:${buffer.local_variables.highmon_context_datetime}}/my_context_datetime"
highmon_like.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|set +password|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
utils_date_calc_seconds_two_given_datetime.arguments = "date_calc_seconds_two_given_datetime"
utils_date_calc_seconds_two_given_datetime.command = ""
utils_date_calc_seconds_two_given_datetime.conditions = "${tg_arguments} =~ ^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) ([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9],[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9]) ([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$ && ${info:python_version} !="
utils_date_calc_seconds_two_given_datetime.enabled = on
utils_date_calc_seconds_two_given_datetime.hook = info
utils_date_calc_seconds_two_given_datetime.post_action = none
utils_date_calc_seconds_two_given_datetime.regex = "/.*/${tg_arguments}/my_date1 /.*/${tg_arguments}/my_date2 /(.*),.*/${re:1}/my_date1 /.*,(.*)/${re:1}/my_date2 /.*/${info:python_eval,from datetime import datetime; date1 = datetime.strptime('${my_date1}', '%Y-%m-%d %H:%M:%S'); date2 = datetime.strptime('${my_date2}', '%Y-%m-%d %H:%M:%S'); delta = date1 - date2; print(int(abs(delta.total_seconds())))}/tg_info"
utils_date_calc_seconds_two_given_datetime.return_code = ok
